<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wGGelOxGMdQ+AAAAABJRU5ErkJggg==
</value>
  </data>
</root>